agent we are interested in is the drama manger

ability for th game to play itself

shoudl there be a global or per quest player model

figure out which actions

player model is a list of actions and weights towards them


two systems we need
    player modeling
    picking quests based on player modeling.
        load multiple scenarios
        choose based on closest to player model


design doc?


rough map of town

whitelist is more of a required
blacklist is more of a forbidden

if you dont have a whitelist, you cant activate
if you do have a blacklist, you cant activate

it errs on the side of not activating.

mirror neurons. have a machine learn from seeing things and processing those actions as if it did them itself.

      c
+ - - G - - +
| t g F b . |
| . a m . . |
+ - - G - - +

G: gate
g: guild
F: starting fountain
b: babushka's house
t: tavern
m: market
c: final location of cat
a: alley that reveals itself if player is "bored"

write the story:
    get cat quest from granny
    ask around town for cat clues
    get orange cat clue from someone
        granny, neighbor, etc.
    ask about orange cat to guard.
        tells you location of the cat
        tells you person who might have seen the cat.

    find person who might have seen the cat
        get location of cat
            reveals cat in location
        get help in finding the cat.
            asks for a portion of the the reward
                if yes continue

    spooky dude meets you outside gate.

    several areas to find the cat in.
        you either have to search them all if you dont have help.
        or if you have help you only have to search one before you are given it.

story branching paths:
    if you get bored an alley appears from the market to the guild hall, the cat is just sitting there for you to scoop up.
        an event activates when your "boredom" level rises that shows the cat running into the alley
        end point branch






more scenarios, at 4
get player model data. at least based on how many times user does an action. get scenarios that
implement looking at items, and getting keys from that.
when to offer the quest: when the player gets bored
    when the players boredom stat goes below some threshold
how does it look like to offer the quest
    how do you make the player know there is an alternative without being too disruptive
how to choose the quest to offer.

todo: probably not, just use existing key method
add tags to each place so you can trigger a global "change path" event if we need to
    tag outside, player seeks action
        cat runs past into an alley, go chase
    tag outside, player just bored
        cat runs past you have chance to grab it or follow?!?

research how to update confidence. and determine the best choice.

write an intro questionnaire
update confidence

based on

old lady gives you a lead
use market for traveling cat merchant.
    old lady tells you about cat merchant, perhaps cat merchant stole the cat?
    to swap maybe spooky man tells you that the cat he gave to cat merchant is not the right cat. leads you to the right cat

do the cat rain dance to rain cats and try to find the correct one.



todo: should rooms have keys like players? this would help in keeping track of rooms and not just keepin track of players?
events would then also need to check room keys.
alternatively have the onDrop event activate for an item which would add a key to the player that would activate another event

todo: rooms and maybe other things have unique keyword actions assigned to them.
like hide, outside the gate when you set a baited trap for the cat you can hide to "activate" that event.
idea: have events with arbitrary flag. when active the event listener looks to see if the command matched with the event type.
then do all the things the event does.

instead of printing (i dont know how to do that), activate the event listener on the command word. only if the command is not a valid event name already...
the rest of the words after the command are used to add to a sort of keylist? maybe have this one separate from the normal one?

presentation notes:
introduce the idea of a drama management.

games
why people play games
why people replay games, or why they dont replay games
games should be tweaked to the players interests

how do we tweak this considering that every player is different.
we can just provide enough paths for the player to take so they can choose themselves,
but players may not know what they want or when they should switch.

in comes our system
given a story that the player can play through we give the player a number of paths that they can choose
from each path there are links to other t

information gain. if the player took each path which path gives the most amount of info

player model is some distribution over some alternatives. probabiltiys of taking branching paths.

player model has some kind of survey, by putting them in various situations, . by tags.

go back and show them the difference between the learned and the initial player model. call back to earlier actions to show why the player has the model they do.



everything to put into the abstract.
motivations of the problem
what we do to solve the problem
if we have them the results

two to three paragraphs, hopefully only two.
descriptive but not distracting.

think of a good title.

information based online drama management

all of this can change from now till the actual submission.

todo: test our system
to test we need it to prefer some line

todo: how to trace the quest for usable info
take goal key ("win" in our case) and find what it requires
    it requires a set of keys
        for those set of keys find out what events give them.

todo for branch points there should be some sort of threshold. so if a player is only a little bit bored they wont be offered something that will skip them to the end.

player is not engaged
drama manager develops hypothesis
    try to select a distraction and where to put it.
    if they interact with distraction we can be more sure

assign distraction tasks according what you have been doing in the past.

how many distraction tasks do we need to generate before it has an accurate player model. low kl divergence.

kl vs # of user actions.


next time on thursday.
come up with test case, have a starting player model, have what it shifts to. hard coded for now.

we are testing how changing the methods of selecting 

we want to ask question and give distractions to get the most informative view of the player model.
we can give them all, but there are problems of overloading the